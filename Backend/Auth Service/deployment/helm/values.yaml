# Default values for auth-service.
# This is a YAML-formatted file.

replicaCount: 1

image:
  repository: mackel/ckdac-auth-service
  pullPolicy: Always

apiGateway:
  internal:
    id: gateway-int
    hostname: api-gateway-internal-gateway
    protocol: http
    # port: 80
  external:
    id: gateway-ext
    hostname: auth.ckdac.com

routes:
  - name: auth
    gatewayName:
      - external
    prefix: /
    rewrite: ''
    bypassAuth: true

environment:
  production: false
  host: "0.0.0.0"
  port: 8080
  minPwLength: 8
  logPath: "./log"
  apiKeySecret: api-keys-auth-service
  accessTokenTtl: "300000"
  refreshTokenTtl: "3600000"
  passwordResetTokenTtl: "120000"

database:
  protocol: mongodb+srv
  databaseServiceName: database
  databaseName: auth-service
  replicaSetName: rs0
  portName: db
  enableSSL: false
  userSecret: database-auth-service

accessTokenSecret:
  name: access-token-keypair
  privateKey: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBMEpKUHJFZG1jVTlQbWd3cmh6L1pDbitPOW5BRkt3Z1dCNldrdWw3RzhBVDdhSmNnCmR6bmVXSm8xMmhYQVBGemRTcEcxcHd6QldvcFg3VlpndE85RHB3Ris3UEZYeTN3OHliR0RZZWtvYWxOd1pJM3AKcWVDQjN2a2xXb08wSGxybXp1bTFacWdUY3FiOWlSM0l1ZmVuejB2Y3VXSHZNUTFqSDNRZG1IbkR1Y29nOWhuRAozYjVWSkpIT3BnM1lDVTFnUlM1MHZiZkU2b2Q0bUI1RUtkT2RXVTdnVG5XS0ZqT291aElzdkZMZXYxOWRSdjFaClZSOU93RnYwYXY2R0J0a2xLNnRJQkNZZlVDQTdMTmtEd0dJN0NBMnJ5MngwYXUzY2U5SWpXZXIrenlsOHYvM0oKWlV5TDlIa2VpSTlnNVllL2NBUTdsOHFzMjdiMm55S09RL1NnRmtMSTFBVlQ5UHhpQ042Q0JwRVBkRXlUdVJndAoyNEFzb3JvK0dnRkJKTkhDbUYxSmdYWVd6ZDUxV25xN1g3dTlGRHpMMDE0UWVCMWZXKzIzNUtkcjJrNmhvRFVwClpRUGdRZDdTeFdDZ1JCZlFrRm40enJsc2hRUjlvYlhzSjhGa05oaThDOHd6VEQxR2tmaXFydnZiT0NRUTEyTFgKTFJSMnA0M1p6Y1V0TVNJWllwdzhnYkpXZWtRR25sNzdwN1FhN2tzRFJtMDNPTnpxbGprV2grMFVDTmY3M1M3UwpVbHoyTGk5Zk1ySXFUS3VmOWJqTldDMUdUN0V5eW9CbDdYY3lBUkpMNXpUZnB0eTROV2ZIcmljMCtrUU1EVGNNClZTcHhQVEUva0ZielJ2ODlId0ZXT20wSDFXbzNHYmhodHF2OUxNYjBEVXlSWkZZOHpVdEoraUdMbXNjQ0F3RUEKQVFLQ0FnRUF0TWo5Y2xENVJPSUFGNERSQWd5ZnJtL2VsVkdIeVVMYkJZbllmUXJGMlNvWVdSSVZ2QUpXN2VuTgpIOW1XcFR2QlBHK01TdDNOZ3hOREg1K3RkMmVrOWs5Zm16V2VhZXlvTEJOSDFFaHJGYTU1VDArSzZBcUh4Nk9oCmN4R1J3SFgrZGY4eGsyZkFZN0xITkdDeXFpODJMNEtNTWN2bnJsYnlRa005bS9wL1lyMEhVUW9JTWw1V0lycVgKcW10NWhLYWkrWlJJOEdFbnVEbndsN28wVHlUejBJT0QvYjM0RVVKNXo3OE5NN2VKQjh3N1o5c1Y0YWlmZEREQQpiVFZ0S3VaeFI2YlJaM2M3MFJIKytPS3FVOGxSYmF1YjYxbDRsMjdSbkNvTEpsZUF3a1F0czZUaE9vTGRGTzBmClFETTNRLzBrUEk0T3NZV2x5MVNOOUdYWmRxSEZWN1dvdDNuY25uVGtMS09OU1l1d0Q5TDY1ODlVVDZjeUFPL3UKWmZXZHBYTlBvMzVOOUZFejhOSjAyZHlhOG5ZMVUxTTdhc1pQOFBMSkprSGF1NTQxNFFDdWpnK1BIYlZmQ0MxTQpnNkVqWFBWZ3BQclRUdktCTkhKekxYcmo3NllOcmxEaDczOE1wVURGbmNIUlhzaGFJVDkyUUoyVUp5R1hhdnpZCnBJcDhPdGI5NXZsdTFvUnBXV2NOWDh1L1VUOGcxeU4rUkxwbWVXczUvR1UyS3VSUnR1L0FmeTNrYWtsdjNGZXcKYTlJeHNOWWUzNUxNQmtxTGpzNnpvdC9IejZDdUd4emlacmNkRnVoeFBJQ0FxaFBMOWZaTGRURUE4RElFRUhFVgpsbEJ3eEI5SGN3MDQxOVlIUjJRMjBFSVNRZDFGSlg4TXNQdkJTWmNiSWhLMWtwZVRwekVDZ2dFQkFPdHRTbDJuCmxRSGh3Mkpyc1RXc2ZrYkoxSlhhLzFEMlhPZS9QVktPeXJ2TmdWb2pZUWZQNTUrNHNPK1g5YmpjbTU0Rjg3ZnkKRlhXOENUQ2JKZUt3eEx6emVhbC9KSG9MQ1hDV2JPN0JDRXlxR2ZVWFk1YnBrVGpIRTdoVkpYZzg5b1VUZm51MQpLcUN1VUwwSUdMTnVNZE90VWJ6NWw4OUlnRldEaHpJM3lxb2w3L252cE1jZzQ0RHNGc2JRdGFyblhLRlBLQnEwCkZ5MDlzZ0w2aTZQNytMU05vREYzVzlRZVV5U3RuaXZLay9lQ2pDclZnMnhSRVdlem1oZHpoNWlCQitWYTM0aDQKcFBQL05GbWhCcms1SzJabDI5cDQrSEl0USt6QkJtUXY5a0xWOGk4b0ZZbHNvdXJrN0h5cW5pSUVMNk5FWWNQOQpmLzJwdXU0TXNySzZGb3NDZ2dFQkFPTE1QZWZ2d1hMZ3EwTWlNdUxvNkVwNWRMTTZkMVJtMkFybkdYTHFFMFkzCndhUGg4dFAvZlB6b0VXNXJPZGNBZXBtLzBSZ0tuU2ZpcWF6RVd4UTRTZ3AraWpRSXVOZnY5dVVHay9YSW95QXoKTC9vUzJQZzlQOTQrN0hUNHNOb21qWHZZTmpVQzBqNmpUOEZ5c0VUZTN4Qk1jclpMQkhCNkZoTnVEaG9JOFp1WQpOVCtnRk5sQmVtTVFzVWk2NFhWeTRwS0JweVhOT3JlUWhSS0YzdzNCLy8rUGwzWTBpZ3RNY1FXM0NRczlHejY0Clc4UVZzaGgraENmZDZQY3BlSWlyMFpwNjliSEdhNTRBenJmV0Fzc3Q0dGpHbEU1REh6TnJkNWwyQVpJSnhMd1oKT0JEK1JVVHp1aE0rWFJ0bW05OFdqR2I2TjYrS1RoRjV4RDAxVXRhYzBEVUNnZ0VBSVB6a1liRWNxUEhZYmM4SApPcTBiMkpGcFQwSXJhazNMQU5JRUpyQkphZjFHdGJtbFcvSGUwN3VPVjFRa295Mk9SSnN5NWtCdWoxdTBzZkhiCllpTkF2ZlVqeEFORHVqSVh0WVh1WjVuMnJyOWErY080T2FvcXBoa0hBMW95OE9FaDdjMm9lRzhQTlFxWDE1VHQKMlI2RXJ0Tm5VNkpwaWlydmlJdndnckhjblBESjZteVEyeklaanJRR0VQK25wUFhjUGVJWWpYMVVqZ3RLQ1M3UQpLRDhqUHpGbEUrbFVuYWxPSHlLUXVqUWRmWjMyUS80ODl3MTQ4ZDN4cG4yU3IyVE5GVzhoU1Q4V1pmWUpnTkdXClhwZkxKQUw3eG1ZUzhmU3p3dFhkTG1hbURBRnNlUDBWMzNhd2NWZDRaNU9FcXVHSlIwaEtwcXE3cDNDRDk5MGgKb1BlQU53S0NBUUFRbi9BWnhGVmwybG96ZlpwRlQ5VlhRRGZ4dTJOcjZHNEZ2cEw2L1hXVVBCb1JyVXBqaCtMZApseFZRQnNRaW9vSmFLdGxrN2NJL1hqb1owL3JwTEljZzVjMnpxc0FCOURFZzhLNS80Y2t6WHcweFE1aHIrZkZvCmxTdzRGdEsvNnZ1TURIbE13WHd2NDBEQmFXcktZWnZ3VWVwR3VwRUV2YTVJbGxTcVMrV0tCa3BBODdjVGhkMDIKemM1eENtSGtmaHRscWVOYXZnU0QyREFvLzI4dVR2NDQrWW1jdkpVeDV0U1NHcXlyQ2p1cENWS1F1UlpvL1QwcQp2dldJeUoxeFIwY0NEK2xhc3JUSXpENWE4M0VZKzdBWk85VTdOMmhlR0k2WHpUS29SZGNLQXI4OVg2WXNPOEYwCkQ2bzdpL1g1RUdvU1VsMHFuUFRFQ3l6N1g2Rkc0Zy9SQW9JQkFEc2JzaGozQ3BuMnB6YS9YbEc4S3d5Tm9tZkMKMjdobjVsa2E0UENLRWM1UVcyNjArOEhpMG9QZEE4MXdYZmgzdktHV1BwYldUeUVaYXhwVnJRNENmRjVCSll2MgpQLzFId2lMWXMvTWRMU2trNUhTNU1UMnVqMHRSUkgvRWVFWGE2WlVSVUFWelF6U0REZjQ0bEQvajltWng5QTFLCmJ2YVY2TXRVUzd4ek5CenhPOWVEM0pHWkJMajVYbFdlTHIvbmdPajdjaVBOTnhsaEptbXBQdk1mRkpjWlh5U2cKR3BrRE9OT0l1dkVyK2tOa3VMR3FvUTJmcVBFYmlCSTIwU2VnZzRCR05GZGJzMnJUUVFRRnVNWFlhby9sRVZJTwo4MktadXhlNmx1N0kwbDFKQnBZRnprckd0Tmd2ck1mdG1iakJYNy90NGE3ejI3OWF4ZjVWZmdCNWNZYz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
  publicKey: LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUEwSkpQckVkbWNVOVBtZ3dyaHovWgpDbitPOW5BRkt3Z1dCNldrdWw3RzhBVDdhSmNnZHpuZVdKbzEyaFhBUEZ6ZFNwRzFwd3pCV29wWDdWWmd0TzlECnB3Ris3UEZYeTN3OHliR0RZZWtvYWxOd1pJM3BxZUNCM3ZrbFdvTzBIbHJtenVtMVpxZ1RjcWI5aVIzSXVmZW4KejB2Y3VXSHZNUTFqSDNRZG1IbkR1Y29nOWhuRDNiNVZKSkhPcGczWUNVMWdSUzUwdmJmRTZvZDRtQjVFS2RPZApXVTdnVG5XS0ZqT291aElzdkZMZXYxOWRSdjFaVlI5T3dGdjBhdjZHQnRrbEs2dElCQ1lmVUNBN0xOa0R3R0k3CkNBMnJ5MngwYXUzY2U5SWpXZXIrenlsOHYvM0paVXlMOUhrZWlJOWc1WWUvY0FRN2w4cXMyN2IybnlLT1EvU2cKRmtMSTFBVlQ5UHhpQ042Q0JwRVBkRXlUdVJndDI0QXNvcm8rR2dGQkpOSENtRjFKZ1hZV3pkNTFXbnE3WDd1OQpGRHpMMDE0UWVCMWZXKzIzNUtkcjJrNmhvRFVwWlFQZ1FkN1N4V0NnUkJmUWtGbjR6cmxzaFFSOW9iWHNKOEZrCk5oaThDOHd6VEQxR2tmaXFydnZiT0NRUTEyTFhMUlIycDQzWnpjVXRNU0laWXB3OGdiSldla1FHbmw3N3A3UWEKN2tzRFJtMDNPTnpxbGprV2grMFVDTmY3M1M3U1VsejJMaTlmTXJJcVRLdWY5YmpOV0MxR1Q3RXl5b0JsN1hjeQpBUkpMNXpUZnB0eTROV2ZIcmljMCtrUU1EVGNNVlNweFBURS9rRmJ6UnY4OUh3RldPbTBIMVdvM0diaGh0cXY5CkxNYjBEVXlSWkZZOHpVdEoraUdMbXNjQ0F3RUFBUT09Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=

serviceAccount:
  create: true
  annotations: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
