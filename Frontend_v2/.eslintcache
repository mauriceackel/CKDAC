[{"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/index.tsx":"1","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/serviceWorker.ts":"2","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/App.tsx":"3","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/config.ts":"4","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/pages/Home.tsx":"5","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/pages/SignIn.tsx":"6","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/ValidatedInput.tsx":"7","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/services/auth/authservice.ts":"8","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/utils/hooks/useQuery.ts":"9","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/pages/SignUp.tsx":"10","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/services/auth/interceptors.ts":"11","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/services/auth/authcontext.tsx":"12","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/AccountPopover.tsx":"13","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/services/userservice.ts":"14","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Icons/UserIcon.tsx":"15","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Icons/ChevronRightIcon.tsx":"16","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Icons/LogoutIcon.tsx":"17","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Icons/SettingsIcon.tsx":"18","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/pages/Account.tsx":"19","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/pages/InterfaceEditor.tsx":"20","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/services/apiservice.ts":"21","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/models/ApiModel.ts":"22","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/JsonEditor.tsx":"23","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/pages/MappingCreator.tsx":"24","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/utils/helpers/apiSelection.ts":"25","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/utils/helpers/swaggerParser.ts":"26","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Icons/ClearIcon.tsx":"27","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Icons/AddIcon.tsx":"28","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/services/mappingservice.ts":"29","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/utils/helpers/toTree.ts":"30","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/models/MappingModel.ts":"31","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/contexts/MappingContext.tsx":"32","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/MappingContainer.tsx":"33","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/MappingArea.tsx":"34","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/SchemaTree.tsx":"35","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/MappingTransformationEditor.tsx":"36","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/utils/helpers/escapeJsonata.ts":"37","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Icons/CheckIcon.tsx":"38","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/MappingTest.tsx":"39","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/utils/helpers/stringIfiedToJsonata.ts":"40","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Spinner.tsx":"41","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/services/adapterservice.ts":"42","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/utils/helpers/download.ts":"43","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/InfoModal.tsx":"44"},{"size":467,"mtime":1613835224651,"results":"45","hashOfConfig":"46"},{"size":5308,"mtime":1613819202796,"results":"47","hashOfConfig":"46"},{"size":3603,"mtime":1615156017596,"results":"48","hashOfConfig":"46"},{"size":330,"mtime":1613820211948,"results":"49","hashOfConfig":"46"},{"size":1580,"mtime":1613840170686,"results":"50","hashOfConfig":"46"},{"size":2809,"mtime":1615046118230,"results":"51","hashOfConfig":"46"},{"size":740,"mtime":1613829963800,"results":"52","hashOfConfig":"46"},{"size":2440,"mtime":1613840685521,"results":"53","hashOfConfig":"46"},{"size":675,"mtime":1613830490716,"results":"54","hashOfConfig":"46"},{"size":3250,"mtime":1615046134348,"results":"55","hashOfConfig":"46"},{"size":1356,"mtime":1613859094193,"results":"56","hashOfConfig":"46"},{"size":1342,"mtime":1613857111990,"results":"57","hashOfConfig":"46"},{"size":2837,"mtime":1615156533541,"results":"58","hashOfConfig":"46"},{"size":571,"mtime":1613839999627,"results":"59","hashOfConfig":"46"},{"size":515,"mtime":1613840084525,"results":"60","hashOfConfig":"46"},{"size":482,"mtime":1613840127663,"results":"61","hashOfConfig":"46"},{"size":541,"mtime":1613840108742,"results":"62","hashOfConfig":"46"},{"size":1090,"mtime":1613840331555,"results":"63","hashOfConfig":"46"},{"size":3842,"mtime":1615035849482,"results":"64","hashOfConfig":"46"},{"size":5870,"mtime":1615035854117,"results":"65","hashOfConfig":"46"},{"size":1326,"mtime":1613861757731,"results":"66","hashOfConfig":"46"},{"size":305,"mtime":1614425280803,"results":"67","hashOfConfig":"46"},{"size":862,"mtime":1615649397617,"results":"68","hashOfConfig":"46"},{"size":29821,"mtime":1615666175257,"results":"69","hashOfConfig":"46"},{"size":714,"mtime":1614427982569,"results":"70","hashOfConfig":"46"},{"size":10381,"mtime":1615647422504,"results":"71","hashOfConfig":"46"},{"size":685,"mtime":1614438507859,"results":"72","hashOfConfig":"46"},{"size":472,"mtime":1614435705019,"results":"73","hashOfConfig":"46"},{"size":2749,"mtime":1615150301076,"results":"74","hashOfConfig":"46"},{"size":594,"mtime":1614452242409,"results":"75","hashOfConfig":"46"},{"size":1199,"mtime":1615149927223,"results":"76","hashOfConfig":"46"},{"size":4785,"mtime":1615149633427,"results":"77","hashOfConfig":"46"},{"size":4422,"mtime":1615666028885,"results":"78","hashOfConfig":"46"},{"size":6477,"mtime":1615153891025,"results":"79","hashOfConfig":"46"},{"size":3509,"mtime":1615646735521,"results":"80","hashOfConfig":"46"},{"size":4099,"mtime":1615129890151,"results":"81","hashOfConfig":"46"},{"size":393,"mtime":1615127290925,"results":"82","hashOfConfig":"46"},{"size":679,"mtime":1615148218737,"results":"83","hashOfConfig":"46"},{"size":5088,"mtime":1615649488981,"results":"84","hashOfConfig":"46"},{"size":314,"mtime":1615641494627,"results":"85","hashOfConfig":"46"},{"size":661,"mtime":1615653525309,"results":"86","hashOfConfig":"46"},{"size":575,"mtime":1615653158182,"results":"87","hashOfConfig":"46"},{"size":283,"mtime":1615654712494,"results":"88","hashOfConfig":"46"},{"size":1432,"mtime":1615655592277,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"fbnpge",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/index.tsx",[],["191","192","193","194","195","196"],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/serviceWorker.ts",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/App.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/config.ts",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/pages/Home.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/pages/SignIn.tsx",["197"],"import ValidatedInput from 'components/ValidatedInput';\nimport React, { ReactElement, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { signIn } from 'services/auth/authservice';\nimport useQuery from 'utils/hooks/useQuery';\nimport { useHistory, useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { getUser } from 'services/userservice';\nimport { AuthContext } from 'services/auth/authcontext';\n\n// #region Form Validation\nconst SignInSchema = yup.object({\n  email: yup\n    .string()\n    .required('Email is required')\n    .email('Email has a wrong format'),\n  password: yup.string().required('Password is required'),\n});\n\ntype SignInData = yup.InferType<typeof SignInSchema>;\n// #endregion\n\nfunction SignIn(): ReactElement {\n  const { returnUrl } = useQuery<{ returnUrl: string }>();\n  const { authStateChanged } = useContext(AuthContext);\n  const history = useHistory();\n  const location = useLocation();\n\n  const { register, handleSubmit, errors, setError } = useForm({\n    resolver: yupResolver(SignInSchema),\n  });\n\n  async function handleSignIn(signInData: SignInData) {\n    try {\n      const userId = await signIn(signInData.email, signInData.password);\n      const user = await getUser(userId);\n      authStateChanged(user);\n\n      if (returnUrl) {\n        history.push(returnUrl);\n      } else {\n        history.push('/');\n      }\n    } catch (err) {\n      console.log(err);\n      setError('signin', {\n        type: 'manual',\n        message: 'Wrong email address or password',\n      });\n    }\n  }\n\n  return (\n    <div className=\"content-page flex flex-col items-center\">\n      <form\n        noValidate\n        onSubmit={handleSubmit(handleSignIn)}\n        className=\"mt-4 flex flex-col shadow-lg p-8 rounded small-form\"\n      >\n        <p className=\"font-bold text-sm\">Email</p>\n        <ValidatedInput name=\"email\" register={register} errors={errors}>\n          <input type=\"email\" className=\"input\" />\n        </ValidatedInput>\n        <p className=\"mt-2 font-bold text-sm\">Password</p>\n        <ValidatedInput name=\"password\" register={register} errors={errors}>\n          <input type=\"password\" className=\"input\" />\n        </ValidatedInput>\n\n        {errors.signin && (\n          <p className=\"text-sm text-red-600\">{errors.signin.message}</p>\n        )}\n\n        <button\n          type=\"submit\"\n          className=\"mt-4 button shadow-lg bg-red-900 text-white\"\n        >\n          Sign In\n        </button>\n\n        <Link\n          to={`/signup/${location.search ?? ''}`}\n          className=\"mt-4 text-center button shadow-lg bg-red-900 text-white\"\n        >\n          Sign Up\n        </Link>\n      </form>\n    </div>\n  );\n}\n\nexport default SignIn;\n","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/ValidatedInput.tsx",["198"],"/* eslint-disable react/require-default-props */\nimport React, { ReactElement } from 'react';\nimport { DeepMap, FieldError } from 'react-hook-form';\n\ntype ValidatedInputProps<T = Record<string, unknown>> = {\n  name: keyof T & string;\n  register: any;\n  errors?: DeepMap<T, FieldError> &\n    DeepMap<Record<string, unknown>, FieldError>;\n  children: ReactElement;\n};\n\nfunction ValidatedInput<T extends Record<string, unknown>>(\n  props: ValidatedInputProps<T>,\n): ReactElement {\n  const { name, register, errors, children: child } = props;\n\n  return (\n    <>\n      {React.cloneElement(child, { name, ref: register })}\n      <p className=\"h-4 text-sm text-red-600\">{errors?.[name]?.message}</p>\n    </>\n  );\n}\n\nexport default ValidatedInput;\n","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/services/auth/authservice.ts",["199","200","201","202","203"],"import axios from 'axios';\nimport { AUTH_BASE_URL } from 'config';\nimport ApiResponse from 'models/ApiResponse';\nimport { UserModel } from 'models/UserModel';\nimport jwtDecode from 'jwt-decode';\nimport { getUser } from 'services/userservice';\n\ntype TokenResponse = ApiResponse<{\n  accessToken: string;\n  refreshToken: string;\n}>;\n\nexport async function signIn(email: string, password: string): Promise<string> {\n  try {\n    const authResult = await axios.post<TokenResponse>(\n      `${AUTH_BASE_URL}/auth`,\n      {\n        email,\n        password,\n      },\n    );\n\n    const { accessToken, refreshToken } = authResult.data.result;\n    localStorage.setItem('accessToken', accessToken);\n    localStorage.setItem('refreshToken', refreshToken);\n\n    const { userId } = jwtDecode(accessToken) as { userId: string };\n    return userId;\n  } catch (err) {\n    console.log(err);\n    throw new Error('Authentication error');\n  }\n}\n\nexport async function signUp(userData: UserModel): Promise<void> {\n  try {\n    await axios.post<ApiResponse<void>>(`${AUTH_BASE_URL}/register`, userData);\n  } catch (err) {\n    console.log(err);\n    throw new Error('Signup error');\n  }\n}\n\nexport async function signOut(): Promise<void> {\n  try {\n    await axios.post<ApiResponse<void>>(`${AUTH_BASE_URL}/logout`);\n  } catch (err) {\n    console.log(err);\n    throw new Error('Logout error');\n  } finally {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n  }\n}\n\nexport function getSignedInUserId(): string | undefined {\n  const accessToken = localStorage.getItem('accessToken');\n\n  if (!accessToken) {\n    return undefined;\n  }\n\n  const { userId } = jwtDecode(accessToken) as { userId: string };\n\n  return userId;\n}\n\nexport async function refreshAccessToken(): Promise<{\n  accessToken: string;\n  refreshToken: string;\n}> {\n  const currentRefreshToken = localStorage.getItem('refreshToken');\n\n  try {\n    const refreshResult = await axios.post<TokenResponse>(\n      `${AUTH_BASE_URL}/renew`,\n      undefined,\n      {\n        headers: {\n          Authorization: `Bearer ${currentRefreshToken}`,\n        },\n      },\n    );\n\n    const { accessToken, refreshToken } = refreshResult.data.result;\n    localStorage.setItem('accessToken', accessToken);\n    localStorage.setItem('refreshToken', refreshToken);\n\n    return refreshResult.data.result;\n  } catch (err) {\n    console.log(err);\n    throw new Error('Token refresh error');\n  }\n}\n","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/utils/hooks/useQuery.ts",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/pages/SignUp.tsx",["204"],"import ValidatedInput from 'components/ValidatedInput';\nimport React, { ReactElement } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { signUp } from 'services/auth/authservice';\nimport { useHistory, useLocation } from 'react-router';\n\n// #region Form Validation\nconst SignUpSchema = yup.object({\n  email: yup\n    .string()\n    .required('Email is required')\n    .email('Email has a wrong format'),\n  firstname: yup.string().required('First name is required'),\n  lastname: yup.string().required('Last name is required'),\n  password: yup\n    .string()\n    .min(8, 'Password is too short')\n    .required('Password is required'),\n  passwordConfirm: yup.string().test({\n    name: 'mismatch',\n    test: (value, context) => context.parent.password === value,\n    message: \"Passwords don't match\",\n  }),\n});\ntype SignUpData = yup.InferType<typeof SignUpSchema>;\n// #endregion\n\nfunction SignUp(): ReactElement {\n  const history = useHistory();\n  const location = useLocation();\n\n  const { register, handleSubmit, errors, setError } = useForm({\n    resolver: yupResolver(SignUpSchema),\n  });\n\n  async function handleSignUp(signUpData: SignUpData) {\n    try {\n      const { passwordConfirm, ...userData } = signUpData;\n\n      await signUp(userData);\n\n      history.push(`/signin/${location.search ?? ''}`);\n    } catch (err) {\n      console.log(err);\n      setError('signup', {\n        type: 'manual',\n        message: 'An error occurred. Please try again later.',\n      });\n    }\n  }\n\n  return (\n    <div className=\"content-page flex flex-col items-center\">\n      <form\n        noValidate\n        onSubmit={handleSubmit(handleSignUp)}\n        className=\"mt-4 flex flex-col shadow-lg p-8 rounded small-form\"\n      >\n        <p className=\"font-bold text-sm\">First Name</p>\n        <ValidatedInput name=\"firstname\" register={register} errors={errors}>\n          <input type=\"text\" className=\"input\" />\n        </ValidatedInput>\n        <p className=\"mt-2 font-bold text-sm\">Last Name</p>\n        <ValidatedInput name=\"lastname\" register={register} errors={errors}>\n          <input type=\"test\" className=\"input\" />\n        </ValidatedInput>\n        <p className=\"mt-2 font-bold text-sm\">Email</p>\n        <ValidatedInput name=\"email\" register={register} errors={errors}>\n          <input type=\"email\" className=\"input\" />\n        </ValidatedInput>\n        <p className=\"mt-2 font-bold text-sm\">Password</p>\n        <ValidatedInput name=\"password\" register={register} errors={errors}>\n          <input type=\"password\" className=\"input\" />\n        </ValidatedInput>\n        <p className=\"mt-2 font-bold text-sm\">Password Confirmation</p>\n        <ValidatedInput\n          name=\"passwordConfirm\"\n          register={register}\n          errors={errors}\n        >\n          <input type=\"password\" className=\"input\" />\n        </ValidatedInput>\n\n        {errors.signup && (\n          <p className=\"text-sm text-red-600\">{errors.signup.message}</p>\n        )}\n\n        <button\n          type=\"submit\"\n          className=\"mt-4 button shadow-lg bg-red-900 text-white\"\n        >\n          Sign Up\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default SignUp;\n","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/services/auth/interceptors.ts",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/services/auth/authcontext.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/AccountPopover.tsx",["205","206","207"],"/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { UserModel } from 'models/UserModel';\nimport React, { ReactElement, useContext, useEffect, useState } from 'react';\nimport { Redirect, useHistory, useLocation } from 'react-router';\nimport { Popover } from 'react-tiny-popover';\nimport { AuthContext } from 'services/auth/authcontext';\nimport { signOut } from 'services/auth/authservice';\nimport LogoutIcon from './Icons/LogoutIcon';\nimport SettingsIcon from './Icons/SettingsIcon';\n\ntype AccountPopoverProps = {\n  children: ReactElement;\n};\nfunction AccountPopover(props: AccountPopoverProps): ReactElement {\n  const { children: child } = props;\n\n  const {\n    authState: { user },\n  } = useContext(AuthContext);\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  function handleClick() {\n    if (!user && !pathname.startsWith('/signin/')) {\n      history.push(`/signin/?${encodeURIComponent(pathname)}`);\n      return;\n    }\n\n    setIsOpen((curr) => !curr);\n  }\n\n  useEffect(() => {\n    if (isOpen && !user) {\n      setIsOpen(false);\n    }\n  }, [user, isOpen]);\n\n  return (\n    <Popover\n      isOpen={isOpen}\n      onClickOutside={() => setIsOpen(false)}\n      align=\"end\"\n      containerClassName=\"z-50\"\n      positions={['bottom']}\n      content={<AccountPopoverContent />}\n    >\n      {React.cloneElement(child, { onClick: handleClick })}\n    </Popover>\n  );\n}\n\n// #region Account Popover content\nfunction AccountPopoverContent(): ReactElement {\n  const history = useHistory();\n  const {\n    authState: { user },\n    authStateChanged,\n  } = useContext(AuthContext);\n\n  async function handleSignOut() {\n    try {\n      await signOut();\n      authStateChanged(undefined);\n\n      history.push('/');\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <div className=\"relative flex flex-col rounded bg-green-800 p-8 shadow-2xl text-white\">\n      <div className=\"absolute rounded-sm right-2 -top-2 bg-green-800 w-6 h-6 transform rotate-45\" />\n      <h1 className=\"text-2xl\">\n        {user?.firstname} {user?.lastname}\n      </h1>\n      <h2 className=\"text-lg\">{user?.email}</h2>\n      <div className=\"flex mt-2\">\n        <button\n          type=\"button\"\n          className=\"flex items-center button shadow-lg bg-white text-green-800 mr-1\"\n          onClick={() => history.push('/account/')}\n        >\n          <SettingsIcon className=\"w-5 h-5 mr-2\" />\n          Settings\n        </button>\n        <button\n          type=\"button\"\n          className=\"flex items-center button shadow-lg bg-white text-green-800 ml-1\"\n          onClick={handleSignOut}\n        >\n          <LogoutIcon className=\"w-5 h-5 mr-2\" />\n          Logout\n        </button>\n      </div>\n    </div>\n  );\n}\n// #endregion\n\nexport default AccountPopover;\n","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/services/userservice.ts",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Icons/UserIcon.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Icons/ChevronRightIcon.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Icons/LogoutIcon.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Icons/SettingsIcon.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/pages/Account.tsx",["208","209"],"import ValidatedInput from 'components/ValidatedInput';\nimport React, { ReactElement, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { getUser, updateUser } from 'services/userservice';\nimport { AuthContext } from 'services/auth/authcontext';\n\n// #region Form Validation\nconst UserSchema = yup.object({\n  email: yup\n    .string()\n    .required('Email is required')\n    .email('Email has a wrong format'),\n  password: yup.string().test({\n    name: 'null_or_min',\n    test: (val) => !val || val.length >= 8,\n  }),\n  passwordConfirm: yup.string().test({\n    name: 'mismatch',\n    test: (value, context) =>\n      !context.parent.password || context.parent.password === value,\n    message: \"Passwords don't match\",\n  }),\n  firstname: yup.string().required('First name is required'),\n  lastname: yup.string().required('Last name is required'),\n});\n\ntype UserData = yup.InferType<typeof UserSchema>;\n// #endregion\n\nfunction SignIn(): ReactElement {\n  const {\n    authState: { user },\n    authStateChanged,\n  } = useContext(AuthContext);\n\n  const { register, handleSubmit, errors, setError } = useForm({\n    resolver: yupResolver(UserSchema),\n  });\n\n  async function handleUpdate(userData: UserData) {\n    if (!user) {\n      return;\n    }\n\n    try {\n      await updateUser({\n        id: user.id,\n        email: userData.email,\n        firstname: userData.firstname,\n        lastname: userData.lastname,\n        ...(userData.password ? { password: userData.password } : null),\n      });\n      const updatedUser = await getUser(user.id!);\n      authStateChanged(updatedUser);\n\n      setError('success', {\n        type: 'manual',\n        message: 'User was updated successfully.',\n      });\n    } catch (err) {\n      console.log(err);\n      setError('error', {\n        type: 'manual',\n        message: 'An error occurred. Please try again later.',\n      });\n    }\n  }\n\n  return (\n    <div className=\"content-page flex flex-col items-center\">\n      <form\n        noValidate\n        onSubmit={handleSubmit(handleUpdate)}\n        className=\"mt-4 flex flex-col shadow-lg p-8 rounded\"\n      >\n        <p className=\"font-bold text-sm\">First Name</p>\n        <ValidatedInput name=\"firstname\" register={register} errors={errors}>\n          <input type=\"text\" className=\"input\" defaultValue={user?.firstname} />\n        </ValidatedInput>\n        <p className=\"mt-2 font-bold text-sm\">Last Name</p>\n        <ValidatedInput name=\"lastname\" register={register} errors={errors}>\n          <input type=\"test\" className=\"input\" defaultValue={user?.lastname} />\n        </ValidatedInput>\n        <p className=\"mt-2 font-bold text-sm\">Email</p>\n        <ValidatedInput name=\"email\" register={register} errors={errors}>\n          <input type=\"email\" className=\"input\" defaultValue={user?.email} />\n        </ValidatedInput>\n        <p className=\"mt-2 font-bold text-sm\">Password</p>\n        <ValidatedInput name=\"password\" register={register} errors={errors}>\n          <input type=\"password\" className=\"input\" />\n        </ValidatedInput>\n        <p className=\"mt-2 font-bold text-sm\">Password Confirmation</p>\n        <ValidatedInput\n          name=\"passwordConfirm\"\n          register={register}\n          errors={errors}\n        >\n          <input type=\"password\" className=\"input\" />\n        </ValidatedInput>\n\n        {errors.error && (\n          <p className=\"text-sm text-red-600\">{errors.error.message}</p>\n        )}\n\n        {errors.success && (\n          <p className=\"text-sm text-green-600\">{errors.success.message}</p>\n        )}\n\n        <button\n          type=\"submit\"\n          className=\"mt-4 button shadow-lg bg-red-900 text-white\"\n        >\n          Update Data\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default SignIn;\n","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/pages/InterfaceEditor.tsx",["210","211","212"],"/* eslint-disable @typescript-eslint/no-use-before-define */\nimport React, {\n  ReactElement,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport Select from 'react-select';\nimport { ApiType } from 'models/ApiModel';\nimport { getApi, getApis, upsertApi } from 'services/apiservice';\nimport { useParams } from 'react-router';\nimport ValidatedInput from 'components/ValidatedInput';\nimport { AuthContext } from 'services/auth/authcontext';\nimport JsonEditor from 'components/JsonEditor';\nimport { ApiOption, optionFilter } from 'utils/helpers/apiSelection';\n\n// #region Form Validation\nconst ApiSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  metadata: yup.object({\n    company: yup.string(),\n    keywords: yup.string(),\n  }),\n  apiSpec: yup.mixed().required(),\n});\ntype ApiData = yup.InferType<typeof ApiSchema>;\n// #endregion\n\nfunction InterfaceEditor(): ReactElement {\n  const { user } = useContext(AuthContext).authState;\n\n  const { mode } = useParams<{ mode: string }>();\n  const apiType = useMemo(() => {\n    switch (mode) {\n      case 'openapi':\n        return ApiType.OPEN_API;\n      case 'asyncapi':\n        return ApiType.ASYNC_API;\n      default:\n        return undefined;\n    }\n  }, [mode]);\n\n  const {\n    control,\n    register,\n    handleSubmit,\n    errors,\n    reset: resetForm,\n    setError,\n  } = useForm({\n    resolver: yupResolver(ApiSchema),\n  });\n\n  // #region Load Apis\n  const [apiOptions, setApiOptions] = useState<ApiOption[]>();\n\n  const loadApis = useCallback(\n    async (type: ApiType) => {\n      if (!user) {\n        return;\n      }\n\n      try {\n        const loadedApis = await getApis(type, true, user.id);\n\n        setApiOptions(\n          loadedApis.map((api) => ({\n            value: api,\n            label: api.name,\n          })),\n        );\n      } catch (err) {\n        console.log('Error loading apis', err);\n      }\n    },\n    [user],\n  );\n\n  useEffect(() => {\n    if (apiType !== undefined) {\n      loadApis(apiType);\n    }\n  }, [apiType, loadApis]);\n  // #endregion\n\n  // #region Api Selection\n  const [selectedApiOption, setSelectedApiOption] = useState<ApiOption>();\n  const selectedApi = useMemo(() => {\n    return selectedApiOption?.value;\n  }, [selectedApiOption]);\n  // #endregion\n\n  // #region Fully load selected Api\n  useEffect(() => {\n    async function loadFullApiData() {\n      if (!selectedApi) {\n        resetForm({});\n        return;\n      }\n\n      try {\n        const apiData = await getApi(selectedApi.id, false);\n\n        resetForm({\n          name: apiData.name,\n          metadata: apiData.metadata,\n          apiSpec: JSON.parse(apiData.apiSpec),\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    loadFullApiData();\n  }, [selectedApi, resetForm]);\n  // #endregion\n\n  // #region Upsert Api\n  async function handleUpsert(apiData: ApiData) {\n    if (apiType === undefined) {\n      return;\n    }\n\n    try {\n      await upsertApi({\n        ...apiData,\n        apiSpec: JSON.stringify(apiData.apiSpec),\n        id: selectedApi?.id,\n        createdBy: user?.id,\n        type: selectedApi?.type ?? apiType,\n      });\n\n      loadApis(apiType);\n\n      setError('success', {\n        type: 'manual',\n        message: 'API was updated successfully.',\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  // #endregion\n\n  return (\n    <div className=\"content-page flex flex-col items-center\">\n      <form\n        noValidate\n        onSubmit={handleSubmit(handleUpsert)}\n        className=\"mt-4 flex flex-col shadow-lg p-8 rounded\"\n      >\n        <p className=\"font-bold text-sm\">APIs</p>\n        <Select\n          className=\"w-full\"\n          defaultValue={selectedApiOption}\n          isSearchable\n          isClearable\n          onChange={(value) => setSelectedApiOption(value ?? undefined)}\n          options={apiOptions}\n          filterOption={optionFilter}\n        />\n\n        <p className=\"mt-4 font-bold text-sm\">Name</p>\n        <ValidatedInput name=\"name\" register={register} errors={errors}>\n          <input type=\"test\" className=\"input\" />\n        </ValidatedInput>\n\n        <p className=\"mt-2 font-bold text-sm\">Metadata</p>\n        <div className=\"flex\">\n          <div className=\"mr-1\">\n            <p className=\"font-bold text-sm\">Company</p>\n            <ValidatedInput\n              name=\"metadata.company\"\n              register={register}\n              errors={errors}\n            >\n              <input type=\"test\" className=\"input\" />\n            </ValidatedInput>\n          </div>\n          <div className=\"ml-1\">\n            <p className=\"font-bold text-sm\">Keywords</p>\n            <ValidatedInput\n              name=\"metadata.keywords\"\n              register={register}\n              errors={errors}\n            >\n              <input type=\"test\" className=\"input\" />\n            </ValidatedInput>\n          </div>\n        </div>\n\n        <p className=\"mt-2 font-bold text-sm\">Api Specification</p>\n        <div className=\"max-w-md\">\n          <Controller\n            name=\"apiSpec\"\n            control={control}\n            defaultValue={{}}\n            render={({ onChange, value }) => (\n              <JsonEditor value={value} onChange={onChange} />\n            )}\n          />\n          {errors.apiSpec && (\n            <p className=\"h-6 text-sm text-red-600\">{errors.apiSpec.message}</p>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"mt-4 button shadow-lg bg-red-900 text-white\"\n        >\n          Save\n        </button>\n        {errors.success && (\n          <p className=\"text-sm text-green-600\">{errors.success.message}</p>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default InterfaceEditor;\n","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/services/apiservice.ts",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/models/ApiModel.ts",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/JsonEditor.tsx",["213","214","215"],"import React, { ReactElement, useEffect, useRef } from 'react';\nimport 'jsoneditor-react/es/editor.min.css';\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { JsonEditor: Editor } = require('jsoneditor-react');\n\ninterface JsonEditorProps {\n  value: any;\n  onChange?: (data: any) => void;\n  readonly?: boolean;\n}\nfunction JsonEditor(props: JsonEditorProps): ReactElement {\n  const { value, onChange = () => {}, readonly = false } = props;\n  const editorRef = useRef<any>(null);\n\n  useEffect(() => {\n    editorRef.current?.jsonEditor?.set(value);\n  }, [value]);\n\n  return (\n    <Editor\n      ref={editorRef}\n      onChange={onChange}\n      mode={readonly ? 'view' : 'text'}\n      allowedMode={[readonly ? 'view' : 'text']}\n      navigationBar={false}\n      statusBar={false}\n      mainMenuBar={false}\n    />\n  );\n}\n\nexport default JsonEditor;\n","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/pages/MappingCreator.tsx",["216","217","218","219"],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/utils/helpers/apiSelection.ts",["220","221"],"import { ApiModel } from 'models/ApiModel';\n\nexport type ApiOption = {\n  value: ApiModel;\n  label: string;\n};\n\nexport function optionFilter(\n  option: any,\n  searchText: string | undefined,\n): boolean {\n  const lowerSearch = searchText?.toLowerCase();\n\n  const { value: api } = option as { value: ApiModel };\n\n  return (\n    !lowerSearch ||\n    api.name.toLowerCase().includes(lowerSearch) ||\n    (api.metadata?.company?.toLowerCase().includes(lowerSearch) ?? false) ||\n    (api.metadata?.keywords?.toLowerCase().includes(lowerSearch) ?? false)\n  );\n}\n\nexport type OperationOption = {\n  value: { operationId: string };\n  label: string;\n};\n\nexport type CodeOption = {\n  value: { code: string };\n  label: string;\n};\n","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/utils/helpers/swaggerParser.ts",["222","223","224","225","226","227","228","229"],"/* eslint-disable @typescript-eslint/no-use-before-define */\nimport SwaggerParser from '@apidevtools/swagger-parser';\nimport { ApiModel } from 'models/ApiModel';\nimport { OpenAPI, OpenAPIV2, OpenAPIV3 } from 'openapi-types';\n\n// #region Types & constants\nexport type OpenApiOperation = {\n  api: ApiModel;\n  operationId: string;\n  responseId: string;\n};\n\nexport type Schema =\n  | {\n      [key: string]: string | Schema;\n    }\n  | [Schema];\n\nexport const httpMethods = [\n  'get',\n  'post',\n  'delete',\n  'put',\n  'patch',\n  'trace',\n  'head',\n  'options',\n];\n// #endregion\n\nexport async function parseApiSpec(apiSpec: string): Promise<OpenAPI.Document> {\n  const apiSpecObject = JSON.parse(apiSpec);\n\n  return SwaggerParser.validate(apiSpecObject, { validate: { spec: false } });\n}\n\n// #region Get operations details\nfunction getOperation<T extends OpenAPIV2.Document | OpenAPIV3.Document>(\n  apiObject: T,\n  operationId: string,\n):\n  | {\n      path: T extends OpenAPIV2.Document\n        ? OpenAPIV2.PathItemObject\n        : OpenAPIV3.PathItemObject;\n      method: string;\n      pathUrl: string;\n      operation: T extends OpenAPIV2.Document\n        ? OpenAPIV2.OperationObject\n        : OpenAPIV3.OperationObject;\n    }\n  | undefined {\n  const pathObjects: [\n    string,\n    T extends OpenAPIV2.Document\n      ? OpenAPIV2.PathItemObject\n      : OpenAPIV3.PathItemObject,\n  ][] = Object.entries(apiObject.paths);\n\n  for (let i = 0; i < pathObjects.length; i += 1) {\n    const [pathUrl, pathObject] = pathObjects[i];\n    const operationObjects: [\n      string,\n      T extends OpenAPIV2.Document\n        ? OpenAPIV2.OperationObject\n        : OpenAPIV3.OperationObject,\n    ][] = Object.entries(pathObject);\n\n    for (let j = 0; j < operationObjects.length; j += 1) {\n      const [method, operationObject] = operationObjects[j];\n\n      if (operationObject.operationId === operationId) {\n        return {\n          path: pathObject,\n          pathUrl,\n          method,\n          operation: operationObject,\n        };\n      }\n    }\n  }\n\n  return undefined;\n}\n\nexport function getOperationIds(apiObject: OpenAPI.Document): string[] {\n  return Object.values(apiObject.paths).flatMap(\n    (pathObject: OpenAPIV3.PathItemObject | OpenAPIV2.PathItemObject) => {\n      return Object.entries(pathObject)\n        .filter(([key]) => httpMethods.includes(key))\n        .map(([, operation]) => {\n          return operation.operationId;\n        });\n    },\n  );\n}\n\nexport function getResponseCodes(\n  apiObject: OpenAPI.Document,\n  operationId: string,\n): string[] {\n  const { operation } = getOperation(apiObject, operationId) ?? {};\n\n  if (!operation?.responses) {\n    return [];\n  }\n\n  return Object.keys(operation.responses);\n}\n// #endregion\n\n// #region Get server details\nfunction getServersV2(apiObject: OpenAPIV2.Document): string[] | undefined {\n  return apiObject.schemes?.map(\n    (scheme) => scheme + apiObject.host + apiObject.basePath,\n  );\n}\n\nfunction getServersV3(apiObject: OpenAPIV3.Document): string[] | undefined {\n  return apiObject.servers?.map((server) => {\n    return Object.entries(server.variables || []).reduce(\n      (url, [varname, value]) =>\n        url.replace(new RegExp(`{${varname}}`, 'g'), value.default),\n      server.url,\n    );\n  });\n}\n// #endregion\n\n// #region Request schema\nexport function getRequestSchema(\n  apiObject: OpenAPI.Document,\n  operationId: string,\n  ignoreOptional = false,\n): Schema | undefined {\n  const result = getOperation(apiObject, operationId);\n  if (result === undefined) {\n    return undefined;\n  }\n\n  const { path, operation } = result;\n\n  // V3\n  if (isOpenApiV3(apiObject)) {\n    const parameters = getV3Parameters(\n      path as OpenAPIV3.PathItemObject,\n      operation as OpenAPIV3.OperationObject,\n      ignoreOptional,\n    );\n    const body = getV3RequestBody(operation as OpenAPIV3.OperationObject);\n\n    return {\n      ...(parameters\n        ? {\n            parameters: removeTypes(\n              flattenSchema({ type: 'object', properties: parameters }),\n            ),\n          }\n        : null),\n      ...(body && Object.keys(body).length\n        ? { body: removeTypes(flattenSchema(body)) }\n        : null),\n    };\n  }\n\n  // V2\n  const parameters = getV2Parameters(\n    path as OpenAPIV2.PathItemObject,\n    operation as OpenAPIV2.OperationObject,\n    ignoreOptional,\n  );\n  const body = getV2RequestBody(operation as OpenAPIV2.OperationObject);\n\n  return {\n    ...(parameters\n      ? {\n          parameters: removeTypes(\n            flattenSchema({ type: 'object', properties: parameters }),\n          ),\n        }\n      : null),\n    ...(body && Object.keys(body).length\n      ? { body: removeTypes(flattenSchema(body)) }\n      : null),\n  };\n}\n\nfunction getV2Parameters(\n  pathObject: OpenAPIV2.PathItemObject,\n  operationObject: OpenAPIV2.OperationObject,\n  ignoreOptional: boolean,\n) {\n  const combinedParameters = [\n    ...(pathObject.parameters ?? []),\n    ...(operationObject.parameters ?? []),\n  ] as (OpenAPIV2.InBodyParameterObject | OpenAPIV2.GeneralParameterObject)[];\n\n  const filteredParameters = combinedParameters.filter(\n    (parameter) =>\n      parameter.in !== 'body' &&\n      (!ignoreOptional || parameter.in === 'path' || parameter.required),\n  );\n\n  if (filteredParameters.length === 0) {\n    return undefined;\n  }\n\n  return filteredParameters.reduce<Record<string, any>>(\n    (obj, parameter) => ({\n      ...obj,\n      [parameter.name]: parameter.schema,\n    }),\n    {},\n  );\n}\n\nfunction getV3Parameters(\n  pathObject: OpenAPIV3.PathItemObject,\n  operationObject: OpenAPIV3.OperationObject,\n  ignoreOptional: boolean,\n) {\n  const combinedParameters = [\n    ...(pathObject.parameters ?? []),\n    ...(operationObject.parameters ?? []),\n  ] as OpenAPIV3.ParameterObject[];\n\n  const filteredParameters = combinedParameters.filter(\n    (parameter) =>\n      parameter.in !== 'body' &&\n      (!ignoreOptional || parameter.in === 'path' || parameter.required),\n  );\n\n  if (filteredParameters.length === 0) {\n    return undefined;\n  }\n\n  return filteredParameters.reduce<Record<string, any>>(\n    (obj, parameter) => ({\n      ...obj,\n      [parameter.name]: parameter.schema,\n    }),\n    {},\n  );\n}\n\nfunction getV2RequestBody(operationObject: OpenAPIV2.OperationObject) {\n  const params = operationObject.parameters as OpenAPIV2.InBodyParameterObject[];\n  const bodyParameters = params?.filter((parameter) => parameter.in === 'body');\n\n  return {\n    type: 'object',\n    properties:\n      bodyParameters?.reduce(\n        (obj, parameter) => ({\n          ...obj,\n          [parameter.name]: parameter.schema,\n        }),\n        {},\n      ) ?? {},\n  };\n}\n\nfunction getV3RequestBody(operationObject: OpenAPIV3.OperationObject) {\n  const requestBody = operationObject.requestBody as\n    | OpenAPIV3.RequestBodyObject\n    | undefined;\n\n  return requestBody?.content?.['application/json'].schema;\n}\n// #endregion\n\n// #region Response schema\nexport function getResponseSchema(\n  apiObject: OpenAPI.Document,\n  operationId: string,\n  responseId: string,\n): Schema | undefined {\n  const result = getOperation(apiObject, operationId);\n  if (result === undefined) {\n    return undefined;\n  }\n\n  const { operation } = result;\n\n  // V3\n  if (isOpenApiV3(apiObject)) {\n    const body = getV3ResponseBody(\n      operation as OpenAPIV3.OperationObject,\n      responseId,\n    );\n\n    return removeTypes(flattenSchema(body ?? {}));\n  }\n\n  // V2\n  const body = getV2ResponseBody(\n    operation as OpenAPIV2.OperationObject,\n    responseId,\n  );\n\n  return removeTypes(flattenSchema(body));\n}\n\nfunction getV2ResponseBody(\n  operationObject: OpenAPIV2.OperationObject,\n  responseId: string,\n) {\n  const response = operationObject.responses?.[responseId] as\n    | OpenAPIV2.ResponseObject\n    | undefined;\n\n  return response?.schema;\n}\n\nfunction getV3ResponseBody(\n  operationObject: OpenAPIV3.OperationObject,\n  responseId: string,\n) {\n  const response = operationObject.responses?.[responseId] as\n    | OpenAPIV3.ResponseObject\n    | undefined;\n\n  return response?.content?.['application/json'].schema;\n}\n// #endregion\n\n// #region Schema helpers\nfunction removeTypes(schema: any): Schema {\n  if (schema.type === 'object') {\n    return Object.entries(schema.properties).reduce(\n      (obj, [key, value]) => ({\n        ...obj,\n        [key]: removeTypes(value),\n      }),\n      {},\n    );\n  }\n\n  if (schema.type === 'array') {\n    return [removeTypes(schema.items)];\n  }\n\n  return schema.type;\n}\n\nfunction flattenSchema(schema: any) {\n  if (schema.allOf !== undefined) {\n    const combinedObject = {\n      type: 'object',\n      properties: schema.allOf.reduce(\n        (obj: any, subSchema: any) => ({\n          ...obj,\n          ...flattenSchema(subSchema).properties,\n        }),\n        {},\n      ),\n    };\n\n    return combinedObject;\n  }\n  return schema;\n}\n// #endregion\n\n// #region Request URL\nexport function getRequestUrl(\n  apiObject: OpenAPI.Document,\n  operationId: string,\n  paramValues: Record<string, string> = {},\n): { method: string; url: string } | undefined {\n  const servers = isOpenApiV3(apiObject)\n    ? getServersV3(apiObject)\n    : getServersV2(apiObject);\n  const operationResult = getOperation(apiObject, operationId);\n  console.log(servers, apiObject, operationId, operationResult);\n\n  if (!servers || servers.length === 0 || !operationResult) {\n    return undefined;\n  }\n\n  const { pathUrl, method, path, operation } = operationResult;\n  const server = servers[0];\n\n  // Get all required parameters\n  const parameters = [\n    ...(path.parameters || []),\n    ...(operation.parameters || []),\n  ] as (\n    | OpenAPIV3.ParameterObject\n    | OpenAPIV2.InBodyParameterObject\n    | OpenAPIV2.GeneralParameterObject\n  )[];\n\n  const query = parameters\n    .filter((p) => p.in === 'query')\n    .map((p) => paramValues[p.name] && `${p.name}=${paramValues[p.name]}`)\n    .filter(Boolean)\n    .join('&');\n  const urlWithParams = parameters\n    .filter((p) => p.in === 'path')\n    .reduce(\n      (currUrl, currParam) =>\n        currUrl.replace(\n          new RegExp(`{${currParam.name}}`, 'g'),\n          paramValues[currParam.name] || '',\n        ),\n      pathUrl,\n    );\n\n  return {\n    method,\n    url: `${server}${urlWithParams}${query ? `?${query}` : ''}`,\n  };\n}\n// #endregion\n\n// #region Helpers\nfunction isOpenApiV3(doc: any): doc is OpenAPIV3.Document {\n  return doc.openapi !== undefined;\n}\n// #endregion\n","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Icons/ClearIcon.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Icons/AddIcon.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/services/mappingservice.ts",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/utils/helpers/toTree.ts",["230","231"],"export function buildNodes(jsonObject: any, parentKey = ''): JsonTreeNode[] {\n  if (\n    jsonObject &&\n    typeof jsonObject === 'object' &&\n    !Array.isArray(jsonObject)\n  ) {\n    return Object.keys(jsonObject).map((key) => {\n      const flattenedKey = `${parentKey}${parentKey ? '.' : ''}${key}`;\n\n      return {\n        name: key,\n        key: flattenedKey,\n        children: buildNodes(jsonObject[key], flattenedKey),\n      };\n    });\n  }\n\n  return [];\n}\n\nexport interface JsonTreeNode {\n  name: string;\n  key: string;\n  children?: JsonTreeNode[];\n}\n\nexport type KeyChain = Array<string>;\n","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/models/MappingModel.ts",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/contexts/MappingContext.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/MappingContainer.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/MappingArea.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/SchemaTree.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/MappingTransformationEditor.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/utils/helpers/escapeJsonata.ts",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Icons/CheckIcon.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/MappingTest.tsx",["232","233","234","235","236","237"],"import { MappingPair } from 'models/MappingModel';\nimport React, {\n  Fragment,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport jsonata from 'jsonata';\nimport { pairs2Trans } from 'services/mappingservice';\nimport stringified2Jsonata from 'utils/helpers/stringIfiedToJsonata';\nimport axios from 'axios';\nimport {\n  getRequestUrl,\n  OpenApiOperation,\n  Schema,\n} from 'utils/helpers/swaggerParser';\nimport { Collapse } from 'react-collapse';\nimport JsonEditor from './JsonEditor';\nimport ChevronRightIcon from './Icons/ChevronRightIcon';\n\ninterface MappingTestProps {\n  requestMappingPairs: MappingPair[];\n  responseMappingPairs: MappingPair[];\n  sourceRequestSchema?: Schema;\n  targetOperations?: Record<string, OpenApiOperation>;\n}\nfunction MappingTest(props: MappingTestProps): ReactElement {\n  const {\n    requestMappingPairs,\n    responseMappingPairs,\n    sourceRequestSchema,\n    targetOperations,\n  } = props;\n\n  const [expanded, setExpanded] = useState<boolean>(false);\n\n  const [requestData, setRequestData] = useState<any>({});\n  useEffect(() => setRequestData(sourceRequestSchema ?? {}), [\n    sourceRequestSchema,\n  ]);\n  const [responseData, setResponseData] = useState<any>({});\n\n  const [logs, setLogs] = useState<string[]>();\n  const [error, setError] = useState<string>();\n\n  // #region Execute request\n  const executeRequest = useCallback(async () => {\n    setError(undefined);\n    setLogs(undefined);\n\n    try {\n      const requestMapping = pairs2Trans(requestMappingPairs);\n      const requestMappingString = stringified2Jsonata(\n        JSON.stringify(requestMapping),\n      );\n\n      const targetsRequestData: Record<string, any> = jsonata(\n        requestMappingString,\n      ).evaluate(requestData);\n\n      const targetResponseData: Record<string, any> = {};\n      const promises = Object.entries(targetsRequestData).map(\n        async ([targetOperationId, targetRequestData]) => {\n          if (\n            targetOperations?.[targetOperationId]?.api.apiObject === undefined\n          ) {\n            return;\n          }\n\n          const urlResponse = getRequestUrl(\n            targetOperations[targetOperationId].api.apiObject!,\n            targetOperations[targetOperationId].operationId,\n            targetRequestData.parameters,\n          );\n\n          if (!urlResponse) {\n            return;\n          }\n\n          const { method, url } = urlResponse;\n\n          setLogs((currentLogs) => [\n            ...(currentLogs || []),\n            `Querying endpoint at: ${url}`,\n          ]);\n          targetResponseData[targetOperationId] = await axios\n            .request({\n              method: method as any,\n              url,\n              data: targetRequestData.body,\n              responseType: 'json',\n            })\n            .then((r) => r.data);\n        },\n      );\n\n      await Promise.all(promises);\n\n      const responseMapping = pairs2Trans(responseMappingPairs);\n      const responseMappingString = stringified2Jsonata(\n        JSON.stringify(responseMapping),\n      );\n      const sourceResponseData = jsonata(responseMappingString).evaluate(\n        targetResponseData,\n      );\n\n      setResponseData(sourceResponseData);\n    } catch (err) {\n      const message = `An error occurred during your request: ${err.message}.${\n        err.value ? ` Received value: ${JSON.stringify(err.value)}` : ''\n      }`;\n\n      setError(message);\n      setResponseData({});\n    }\n  }, [\n    requestData,\n    requestMappingPairs,\n    responseMappingPairs,\n    targetOperations,\n  ]);\n  // #endregion\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"divider relative mt-4\"\n        onClick={() => setExpanded((curr) => !curr)}\n      >\n        Test Request\n        <ChevronRightIcon\n          className={`absolute w-5 h-5 right-4 transition-all transform ${\n            expanded ? '-rotate-90' : 'rotate-90'\n          } `}\n        />\n      </button>\n\n      <Collapse isOpened={expanded}>\n        <div className=\"flex flex-col pt-2\">\n          <div className=\"flex\">\n            <div className=\"w-1/2 mr-1\">\n              Request Data\n              <JsonEditor value={requestData} onChange={setRequestData} />\n            </div>\n            <div className=\"w-1/2 ml-1\">\n              Response Data\n              <JsonEditor value={responseData} readonly />\n            </div>\n          </div>\n\n          {logs && (\n            <div className=\"text-green-600\">\n              Logs:\n              <br />\n              {logs.map((line) => (\n                <Fragment key=\"line\">\n                  {line}\n                  <br />\n                </Fragment>\n              ))}\n            </div>\n          )}\n          {error && <div className=\"text-red-600\">{error}</div>}\n\n          <div className=\"flex justify-end\">\n            <button\n              type=\"button\"\n              className=\"button bg-red-900 text-white\"\n              onClick={executeRequest}\n            >\n              Execute\n            </button>\n          </div>\n        </div>\n      </Collapse>\n    </>\n  );\n}\n\nexport default MappingTest;\n","/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/utils/helpers/stringIfiedToJsonata.ts",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/Spinner.tsx",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/services/adapterservice.ts",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/utils/helpers/download.ts",[],"/Users/dev/Documents/InES/CKDAC/Frontend_v2/src/components/InfoModal.tsx",["238","239","240","241","242","243"],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","severity":1,"message":"257","line":47,"column":7,"nodeType":"258","messageId":"259","endLine":47,"endColumn":18},{"ruleId":"260","severity":1,"message":"261","line":7,"column":13,"nodeType":"262","messageId":"263","endLine":7,"endColumn":16,"suggestions":"264"},{"ruleId":"265","severity":1,"message":"266","line":6,"column":10,"nodeType":"267","messageId":"268","endLine":6,"endColumn":17},{"ruleId":"256","severity":1,"message":"257","line":30,"column":5,"nodeType":"258","messageId":"259","endLine":30,"endColumn":16},{"ruleId":"256","severity":1,"message":"257","line":39,"column":5,"nodeType":"258","messageId":"259","endLine":39,"endColumn":16},{"ruleId":"256","severity":1,"message":"257","line":48,"column":5,"nodeType":"258","messageId":"259","endLine":48,"endColumn":16},{"ruleId":"256","severity":1,"message":"257","line":91,"column":5,"nodeType":"258","messageId":"259","endLine":91,"endColumn":16},{"ruleId":"256","severity":1,"message":"257","line":46,"column":7,"nodeType":"258","messageId":"259","endLine":46,"endColumn":18},{"ruleId":"265","severity":1,"message":"269","line":2,"column":10,"nodeType":"267","messageId":"268","endLine":2,"endColumn":19},{"ruleId":"265","severity":1,"message":"270","line":4,"column":10,"nodeType":"267","messageId":"268","endLine":4,"endColumn":18},{"ruleId":"256","severity":1,"message":"257","line":69,"column":7,"nodeType":"258","messageId":"259","endLine":69,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":55,"column":41,"nodeType":"273","messageId":"274","endLine":55,"endColumn":49},{"ruleId":"256","severity":1,"message":"257","line":63,"column":7,"nodeType":"258","messageId":"259","endLine":63,"endColumn":18},{"ruleId":"256","severity":1,"message":"257","line":79,"column":9,"nodeType":"258","messageId":"259","endLine":79,"endColumn":20},{"ruleId":"256","severity":1,"message":"257","line":116,"column":9,"nodeType":"258","messageId":"259","endLine":116,"endColumn":20},{"ruleId":"256","severity":1,"message":"257","line":146,"column":7,"nodeType":"258","messageId":"259","endLine":146,"endColumn":18},{"ruleId":"260","severity":1,"message":"261","line":7,"column":10,"nodeType":"262","messageId":"263","endLine":7,"endColumn":13,"suggestions":"275"},{"ruleId":"260","severity":1,"message":"261","line":8,"column":21,"nodeType":"262","messageId":"263","endLine":8,"endColumn":24,"suggestions":"276"},{"ruleId":"260","severity":1,"message":"261","line":13,"column":28,"nodeType":"262","messageId":"263","endLine":13,"endColumn":31,"suggestions":"277"},{"ruleId":"256","severity":1,"message":"257","line":88,"column":7,"nodeType":"258","messageId":"259","endLine":88,"endColumn":18},{"ruleId":"256","severity":1,"message":"257","line":395,"column":7,"nodeType":"258","messageId":"259","endLine":395,"endColumn":18},{"ruleId":"256","severity":1,"message":"257","line":437,"column":7,"nodeType":"258","messageId":"259","endLine":437,"endColumn":18},{"ruleId":"256","severity":1,"message":"257","line":639,"column":7,"nodeType":"258","messageId":"259","endLine":639,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":9,"column":3,"nodeType":"267","messageId":"280","endLine":9,"endColumn":14},{"ruleId":"260","severity":1,"message":"261","line":9,"column":11,"nodeType":"262","messageId":"263","endLine":9,"endColumn":14,"suggestions":"281"},{"ruleId":"260","severity":1,"message":"261","line":208,"column":51,"nodeType":"262","messageId":"263","endLine":208,"endColumn":54,"suggestions":"282"},{"ruleId":"260","severity":1,"message":"261","line":237,"column":51,"nodeType":"262","messageId":"263","endLine":237,"endColumn":54,"suggestions":"283"},{"ruleId":"260","severity":1,"message":"261","line":328,"column":30,"nodeType":"262","messageId":"263","endLine":328,"endColumn":33,"suggestions":"284"},{"ruleId":"260","severity":1,"message":"261","line":346,"column":32,"nodeType":"262","messageId":"263","endLine":346,"endColumn":35,"suggestions":"285"},{"ruleId":"260","severity":1,"message":"261","line":351,"column":15,"nodeType":"262","messageId":"263","endLine":351,"endColumn":18,"suggestions":"286"},{"ruleId":"260","severity":1,"message":"261","line":351,"column":31,"nodeType":"262","messageId":"263","endLine":351,"endColumn":34,"suggestions":"287"},{"ruleId":"256","severity":1,"message":"257","line":375,"column":3,"nodeType":"258","messageId":"259","endLine":375,"endColumn":14},{"ruleId":"260","severity":1,"message":"261","line":418,"column":27,"nodeType":"262","messageId":"263","endLine":418,"endColumn":30,"suggestions":"288"},{"ruleId":"278","severity":1,"message":"289","line":1,"column":28,"nodeType":"267","messageId":"280","endLine":1,"endColumn":43},{"ruleId":"260","severity":1,"message":"261","line":1,"column":40,"nodeType":"262","messageId":"263","endLine":1,"endColumn":43,"suggestions":"290"},{"ruleId":"260","severity":1,"message":"261","line":38,"column":50,"nodeType":"262","messageId":"263","endLine":38,"endColumn":53,"suggestions":"291"},{"ruleId":"260","severity":1,"message":"261","line":42,"column":52,"nodeType":"262","messageId":"263","endLine":42,"endColumn":55,"suggestions":"292"},{"ruleId":"260","severity":1,"message":"261","line":58,"column":48,"nodeType":"262","messageId":"263","endLine":58,"endColumn":51,"suggestions":"293"},{"ruleId":"260","severity":1,"message":"261","line":62,"column":48,"nodeType":"262","messageId":"263","endLine":62,"endColumn":51,"suggestions":"294"},{"ruleId":"271","severity":1,"message":"272","line":72,"column":13,"nodeType":"273","messageId":"274","endLine":72,"endColumn":63},{"ruleId":"260","severity":1,"message":"261","line":89,"column":33,"nodeType":"262","messageId":"263","endLine":89,"endColumn":36,"suggestions":"295"},{"ruleId":"265","severity":1,"message":"296","line":1,"column":10,"nodeType":"267","messageId":"268","endLine":1,"endColumn":21},{"ruleId":"265","severity":1,"message":"297","line":4,"column":3,"nodeType":"267","messageId":"268","endLine":4,"endColumn":14},{"ruleId":"265","severity":1,"message":"298","line":5,"column":3,"nodeType":"267","messageId":"268","endLine":5,"endColumn":12},{"ruleId":"265","severity":1,"message":"299","line":6,"column":3,"nodeType":"267","messageId":"268","endLine":6,"endColumn":9},{"ruleId":"265","severity":1,"message":"300","line":7,"column":3,"nodeType":"267","messageId":"268","endLine":7,"endColumn":11},{"ruleId":"265","severity":1,"message":"301","line":10,"column":8,"nodeType":"267","messageId":"268","endLine":10,"endColumn":21},"jsx-a11y/accessible-emoji",[],"lines-around-directive",["302"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["303","304"],"@typescript-eslint/no-unused-vars","'getUser' is defined but never used.","Identifier","unusedVar","'UserModel' is defined but never used.","'Redirect' is defined but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["305","306"],["307","308"],["309","310"],"@typescript-eslint/explicit-module-boundary-types","Argument 'option' should be typed with a non-any type.","anyTypedArg",["311","312"],["313","314"],["315","316"],["317","318"],["319","320"],["321","322"],["323","324"],["325","326"],"Argument 'jsonObject' should be typed with a non-any type.",["327","328"],["329","330"],["331","332"],["333","334"],["335","336"],["337","338"],"'MappingPair' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'escapeJsonata' is defined but never used.","padding-line-between-statements",{"messageId":"339","fix":"340","desc":"341"},{"messageId":"342","fix":"343","desc":"344"},{"messageId":"339","fix":"345","desc":"341"},{"messageId":"342","fix":"346","desc":"344"},{"messageId":"339","fix":"347","desc":"341"},{"messageId":"342","fix":"348","desc":"344"},{"messageId":"339","fix":"349","desc":"341"},{"messageId":"342","fix":"350","desc":"344"},{"messageId":"339","fix":"351","desc":"341"},{"messageId":"342","fix":"352","desc":"344"},{"messageId":"339","fix":"353","desc":"341"},{"messageId":"342","fix":"354","desc":"344"},{"messageId":"339","fix":"355","desc":"341"},{"messageId":"342","fix":"356","desc":"344"},{"messageId":"339","fix":"357","desc":"341"},{"messageId":"342","fix":"358","desc":"344"},{"messageId":"339","fix":"359","desc":"341"},{"messageId":"342","fix":"360","desc":"344"},{"messageId":"339","fix":"361","desc":"341"},{"messageId":"342","fix":"362","desc":"344"},{"messageId":"339","fix":"363","desc":"341"},{"messageId":"342","fix":"364","desc":"344"},{"messageId":"339","fix":"365","desc":"341"},{"messageId":"342","fix":"366","desc":"344"},{"messageId":"339","fix":"367","desc":"341"},{"messageId":"342","fix":"368","desc":"344"},{"messageId":"339","fix":"369","desc":"341"},{"messageId":"342","fix":"370","desc":"344"},{"messageId":"339","fix":"371","desc":"341"},{"messageId":"342","fix":"372","desc":"344"},{"messageId":"339","fix":"373","desc":"341"},{"messageId":"342","fix":"374","desc":"344"},{"messageId":"339","fix":"375","desc":"341"},{"messageId":"342","fix":"376","desc":"344"},{"messageId":"339","fix":"377","desc":"341"},{"messageId":"342","fix":"378","desc":"344"},"suggestUnknown",{"range":"379","text":"380"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"379","text":"381"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"382","text":"380"},{"range":"382","text":"381"},{"range":"383","text":"380"},{"range":"383","text":"381"},{"range":"384","text":"380"},{"range":"384","text":"381"},{"range":"385","text":"380"},{"range":"385","text":"381"},{"range":"386","text":"380"},{"range":"386","text":"381"},{"range":"387","text":"380"},{"range":"387","text":"381"},{"range":"388","text":"380"},{"range":"388","text":"381"},{"range":"389","text":"380"},{"range":"389","text":"381"},{"range":"390","text":"380"},{"range":"390","text":"381"},{"range":"391","text":"380"},{"range":"391","text":"381"},{"range":"392","text":"380"},{"range":"392","text":"381"},{"range":"393","text":"380"},{"range":"393","text":"381"},{"range":"394","text":"380"},{"range":"394","text":"381"},{"range":"395","text":"380"},{"range":"395","text":"381"},{"range":"396","text":"380"},{"range":"396","text":"381"},{"range":"397","text":"380"},{"range":"397","text":"381"},{"range":"398","text":"380"},{"range":"398","text":"381"},[246,249],"unknown","never",[270,273],[295,298],[486,489],[151,154],[5349,5352],[6061,6064],[8130,8133],[8481,8484],[8628,8631],[8644,8647],[10295,10298],[39,42],[1057,1060],[1212,1215],[1676,1679],[1801,1804],[2661,2664]]